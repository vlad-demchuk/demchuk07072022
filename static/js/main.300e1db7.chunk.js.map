{"version":3,"sources":["components/Chart/Chart.tsx","App.tsx","index.tsx"],"names":["statistic","name","time","Chart","useState","landPage","setLandPage","conf","setConf","co","setCo","deal","setDeal","countConf","data","sum","Math","ceil","className","style","gridColumn","type","onClick","floor","random","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAEMA,EAAY,CAChB,CAAEC,KAAM,eAAgBC,KAAM,KAC9B,CAAED,KAAM,eAAgBC,KAAM,IAC9B,CAAED,KAAM,YAAaC,KAAM,GAC3B,CAAED,KAAM,OAAQC,KAAM,MAGXC,EAAQ,WACnB,MAAgCC,mBAASJ,EAAU,GAAGE,MAAtD,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwBF,mBAASJ,EAAU,GAAGE,MAA9C,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAoBJ,mBAASJ,EAAU,GAAGE,MAA1C,mBAAOO,EAAP,KAAWC,EAAX,KACA,EAAwBN,mBAASJ,EAAU,GAAGE,MAA9C,mBAAOS,EAAP,KAAaC,EAAb,KAUMC,EAAY,SAACC,GACjB,IAAMC,EAAMV,EAAWE,EAAOE,EAAKE,EAKnC,OAFeK,KAAKC,KAAKH,EAAOC,EAAM,MAKxC,OACE,gCACE,sBAAKG,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,iCACA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,WAAf,0BACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,QAAQC,MAAO,CAAEC,WAAW,KAAD,OAAOP,EAAUR,KAA3D,SAA2EA,SAI/E,sBAAKa,UAAU,UAAf,UACE,qBAAKA,UAAU,WAAf,0BACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,QAAQC,MAAO,CAAEC,WAAW,GAAD,OAAKP,EAAUR,GAAf,YAA4BQ,EAAUR,GAAYQ,EAAUN,KAAtG,SAAkHA,SAItH,sBAAKW,UAAU,UAAf,UACE,qBAAKA,UAAU,WAAf,uBACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,QAAQC,MAAO,CAAEC,WAAW,GAAD,OAAKP,EAAUR,GAAYQ,EAAUN,GAArC,YAA8CM,EAAUJ,GAAMI,EAAUR,GAAYQ,EAAUN,KAAxI,SAAoJE,SAIxJ,sBAAKS,UAAU,UAAf,UACE,qBAAKA,UAAU,WAAf,kBACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,QAAQC,MAAO,CAAEC,WAAW,GAAD,OAAKP,EAAUJ,GAAMI,EAAUR,GAAYQ,EAAUN,GAArD,YAA8DM,EAAUF,GAAQE,EAAUJ,GAAMI,EAAUR,GAAYQ,EAAUN,KAA1K,SAAsLI,eAM9L,wBACEU,KAAK,SACLC,QAAS,WACPhB,EAAYU,KAAKO,MAAM,GAAAP,KAAKQ,UAAwB,GACpDhB,EAAQQ,KAAKO,MAAM,GAAAP,KAAKQ,UAAwB,GAChDd,EAAMM,KAAKO,MAAM,GAAAP,KAAKQ,UAAwB,GAC9CZ,EAAQI,KAAKO,MAAM,GAAAP,KAAKQ,UAAwB,IANpD,wBC/DOC,EAAgB,WAC3B,OACE,cAAC,EAAD,KCDJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.300e1db7.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst statistic = [\n  { name: 'Landing Page', time: 7.4 },\n  { name: 'Configurator', time: 0.2 },\n  { name: 'Check-out', time: 7.0 },\n  { name: 'Deal', time: 3.8 },\n];\n\nexport const Chart = () => {\n  const [landPage, setLandPage] = useState(statistic[0].time);\n  const [conf, setConf] = useState(statistic[1].time);\n  const [co, setCo] = useState(statistic[2].time);\n  const [deal, setDeal] = useState(statistic[3].time);\n\n  // it doesn't work propely\n  // setInterval(() => {\n  //   setLandPage(Math.floor(Math.random() * (100 - 1)) + 1);\n  //   setConf(Math.floor(Math.random() * (100 - 1)) + 1);\n  //   setCo(Math.floor(Math.random() * (100 - 1)) + 1);\n  //   setDeal(Math.floor(Math.random() * (100 - 1)) + 1);\n  // }, 30000);\n\n  const countConf = (data: any) => {\n    const sum = landPage + conf + co + deal;\n\n    // eslint-disable-next-line no-mixed-operators\n    const result = Math.ceil(data / sum * 100);\n\n    return result;\n  };\n\n  return (\n    <div>\n      <div className=\"starter\">\n        <h1 className=\"title\">Spent time(seconds)</h1>\n        <div className=\"svg\">\n          <div className=\"landing\">\n            <div className=\"subtitle\">Landing page</div>\n            <div className=\"container\">\n              <div className=\"item1\" style={{ gridColumn: `1/${countConf(landPage)}` }}>{landPage}</div>\n            </div>\n          </div>\n\n          <div className=\"landing\">\n            <div className=\"subtitle\">Configurator</div>\n            <div className=\"container\">\n              <div className=\"item2\" style={{ gridColumn: `${countConf(landPage)}/${countConf(landPage) + countConf(conf)}` }}>{conf}</div>\n            </div>\n          </div>\n\n          <div className=\"landing\">\n            <div className=\"subtitle\">Check-out</div>\n            <div className=\"container\">\n              <div className=\"item3\" style={{ gridColumn: `${countConf(landPage) + countConf(conf)}/${countConf(co) + countConf(landPage) + countConf(conf)}` }}>{co}</div>\n            </div>\n          </div>\n\n          <div className=\"landing\">\n            <div className=\"subtitle\">Deal</div>\n            <div className=\"container\">\n              <div className=\"item4\" style={{ gridColumn: `${countConf(co) + countConf(landPage) + countConf(conf)}/${countConf(deal) + countConf(co) + countConf(landPage) + countConf(conf)}` }}>{deal}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <button\n        type=\"button\"\n        onClick={() => {\n          setLandPage(Math.floor(Math.random() * (100 - 1)) + 1);\n          setConf(Math.floor(Math.random() * (100 - 1)) + 1);\n          setCo(Math.floor(Math.random() * (100 - 1)) + 1);\n          setDeal(Math.floor(Math.random() * (100 - 1)) + 1);\n        }}\n      >\n        Random\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Chart } from './components/Chart/Chart';\n\nexport const App: React.FC = () => {\n  return (\n    <Chart />\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}